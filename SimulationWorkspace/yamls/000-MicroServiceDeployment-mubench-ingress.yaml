apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mubench-ingress
  namespace: default
  labels:
    zone: default
    app: mubench-ingress
    version: "1.0"
  annotations:
    something: something
spec:
  selector:
    matchLabels:
      app: mubench-ingress
  replicas: 3
  
  template:
    metadata:
      labels:
        zone: default
        app: mubench-ingress
        version: "1.0"
        prometheus.io/scrape: 'true'
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
    spec:
      terminationGracePeriodSeconds : 3
      #schedulerName: no-balancing-scheduler
      containers:
        - name: mubench-ingress
          image: wmeijer221/microservice_v4-screen:latest
          ports:
            - name: http-mubpodport
              containerPort: 8080
          volumeMounts:
            - name: podinfo
              mountPath: /etc/podinfo
            - name: microservice-workmodel
              mountPath: /app/MSConfig
            - name: microservice-internal-services
              mountPath: /app/MSConfig/InternalServiceFunctions
          env:
            - name: APP
              value: mubench-ingress
            - name: ZONE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['zone']
            - name: K8S_APP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: PN
              value: '6'
            - name: TN
              value: '16'
          resources: 
            limits:
              cpu: 1000m    
        
        

      

      volumes:
        - name: podinfo
          downwardAPI:
            items:
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels
              - path: "annotations"
                fieldRef:
                  fieldPath: metadata.annotations
        - name: microservice-workmodel
          configMap:
            name: workmodel
        - name: microservice-internal-services
          configMap:
            name: internal-services        
---
apiVersion: v1
kind: Service
metadata:
  name: mubench-ingress
  namespace: default
  labels:
    app: mubench-ingress
spec:
  type: LoadBalancer
  selector:
    app: mubench-ingress
  ports:
  - port: 80
    targetPort: 8080
    nodePort:
    name: http-mubserviceport
    type: loadBalancer
  - port: 51313
    targetPort: 51313
    name: grpc-mubserviceport
      type: loadBalancer
  selector:
    app: mubench-ingress
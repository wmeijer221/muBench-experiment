apiVersion: v1
kind: ServiceAccount
metadata:
  name: service-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cdp
rules:
- apiGroups: ["", "extensions"]
  resources: ["pods", "pods/status"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clusterrole-binding
roleRef:
  kind: ClusterRole
  name: cdp
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: service-account
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-aggregator
  labels:
    app: gateway-aggregator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway-aggregator
  template:
    metadata:
      labels:
        app: gateway-aggregator
    spec:
      containers:
      - name: gateway-aggregator
        image: docker.io/wmeijer221/microservice_v4-screen:gateway_aggregator
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      serviceAccountName: service-account
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-aggregator
  labels:
    app: gateway-aggregator
spec:
  type: NodePort
  ports:
  - port: 80
    name: ingress-port
    targetPort: 8000
  - port: 8080
    name: runner-ingress-port
    targetPort: 8000
  selector:
    app: gateway-aggregator
